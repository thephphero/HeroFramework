<?xml version="1.0" encoding="utf-8"?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
  <parameters>
    <parameter key="kernel.root_dir">/Users/celsoluiz81/Sites/HeroFramework</parameter>
    <parameter key="kernel.project_dir">/Users/celsoluiz81/Sites/HeroFramework</parameter>
    <parameter key="kernel.environment">development</parameter>
    <parameter key="kernel.debug">true</parameter>
    <parameter key="kernel.name">HeroFramework</parameter>
    <parameter key="kernel.cache_dir">/Users/celsoluiz81/Sites/HeroFramework/storage/cache</parameter>
    <parameter key="kernel.logs_dir">/Users/celsoluiz81/Sites/HeroFramework/storage/logs</parameter>
    <parameter key="kernel.bundles" type="collection">
      <parameter key="FrameworkBundle">Bundles\FrameworkBundle\FrameworkBundle</parameter>
    </parameter>
    <parameter key="kernel.bundles_metadata" type="collection">
      <parameter key="FrameworkBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/Users/celsoluiz81/Sites/HeroFramework/system/Bundles/FrameworkBundle</parameter>
        <parameter key="namespace">Bundles\FrameworkBundle</parameter>
      </parameter>
    </parameter>
    <parameter key="kernel.charset">UTF-8</parameter>
    <parameter key="kernel.container_class">HeroFrameworkDevelopmentDebugProjectContainer</parameter>
    <parameter key="kernel.timezone">Europe/Berlin</parameter>
    <parameter key="request_listener.http_port">80</parameter>
    <parameter key="request_listener.https_port">445</parameter>
    <parameter key="session_dir">storage/sessions</parameter>
    <parameter key="root_dir">/Users/celsoluiz81/Sites/HeroFramework</parameter>
    <parameter key="base_url">thephphero.local</parameter>
    <parameter key="DB_HOST">localhost</parameter>
    <parameter key="DB_USER">root</parameter>
    <parameter key="DB_PASS">hb5x92kk,</parameter>
    <parameter key="DB_SCHEMA">noshpos</parameter>
    <parameter key="DB_PREFIX">false</parameter>
    <parameter key="debug.container.dump">/Users/celsoluiz81/Sites/HeroFramework/storage/cache/HeroFrameworkDevelopmentDebugProjectContainer.xml</parameter>
  </parameters>
  <services>
    <service id="service_container" class="Symfony\Component\DependencyInjection\ContainerInterface" public="true" synthetic="true"/>
    <service id="request_stack" class="Symfony\Component\HttpFoundation\RequestStack"/>
    <service id="request.factory" class="Bundles\FrameworkBundle\Request\RequestFactory"/>
    <service id="request" class="Bundles\FrameworkBundle\Request\Request">
      <factory service="request.factory" method="create"/>
    </service>
    <service id="context" class="Symfony\Component\Routing\RequestContext"/>
    <service id="routing.route_collection" class="Symfony\Component\Routing\RouteCollection"/>
    <service id="url_generator" class="Symfony\Component\Routing\Generator\UrlGenerator">
      <argument type="service" id="routing.route_collection"/>
      <argument type="service" id="context"/>
      <argument type="service" id="log"/>
    </service>
    <service id="routing.route_loader" class="Bundles\FrameworkBundle\Routing\RouteLoader">
      <argument type="service" id="request"/>
      <argument type="service" id="config"/>
    </service>
    <service id="router" class="Symfony\Component\Routing\Router">
      <argument type="service" id="routing.route_loader"/>
      <argument>null</argument>
      <argument type="collection"/>
      <argument type="service" id="context"/>
      <argument type="service" id="log"/>
    </service>
    <service id="routing.matcher_factory" class="Bundles\FrameworkBundle\Routing\URLMatcherFactory">
      <argument type="service" id="router"/>
      <argument type="service" id="context"/>
    </service>
    <service id="matcher" class="Symfony\Component\Routing\Matcher\UrlMatcher">
      <argument type="service" id="routing.route_collection"/>
      <argument type="service" id="context"/>
      <factory service="routing.matcher_factory" method="create"/>
    </service>
    <service id="listener.router" class="Symfony\Component\HttpKernel\EventListener\RouterListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="matcher"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="context"/>
      <argument type="service" id="log"/>
    </service>
    <service id="listener.middleware" class="Bundles\FrameworkBundle\Routing\Listeners\MiddlewareListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="controller_resolver" class="Bundles\FrameworkBundle\Controller\ContainerAwareControllerResolver">
      <argument type="service" id="log"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="event_dispatcher" class="Symfony\Component\EventDispatcher\EventDispatcher"/>
    <service id="http_kernel" class="Symfony\Component\HttpKernel\HttpKernel">
      <argument type="service" id="event_dispatcher"/>
      <argument type="service" id="controller_resolver"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="response.listener" class="Symfony\Component\HttpKernel\EventListener\ResponseListener">
      <tag name="kernel.event_subscriber"/>
      <argument>%kernel.charset%</argument>
    </service>
    <service id="config" class="Bundles\FrameworkBundle\Config\Config">
      <argument type="service" id="service_container"/>
    </service>
    <service id="log" class="Bundles\FrameworkBundle\Log\Log">
      <argument>null</argument>
    </service>
    <service id="kernel.exception_listener" class="Bundles\FrameworkBundle\Exception\ExceptionSubscriber">
      <argument>App\common\ErrorController::exception</argument>
      <argument>null</argument>
      <argument type="service" id="log"/>
    </service>
    <service id="listener.view_response" class="Bundles\FrameworkBundle\Response\Listeners\ViewResponseListener">
      <tag name="kernel.event_listener" event="kernel.view" method="onKernelView"/>
    </service>
    <service id="db" class="Bundles\FrameworkBundle\Database\Database">
      <argument type="service" id="config"/>
      <factory class="Bundles\FrameworkBundle\Database\PDOFactory" method="createPDO"/>
    </service>
    <service id="session.pdo_session_handler" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler">
      <argument type="service" id="db"/>
    </service>
    <service id="session.file_session_handler" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeFileSessionHandler">
      <argument>%session_dir%</argument>
    </service>
    <service id="session.session_storage" class="Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage">
      <argument type="collection"/>
      <argument type="service" id="session.pdo_session_handler"/>
    </service>
    <service id="session" class="Symfony\Component\HttpFoundation\Session\Session">
      <argument type="service" id="session.session_storage"/>
    </service>
    <service id="session.session_listener" class="Bundles\FrameworkBundle\Session\SessionListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="session.save_session_listener" class="Symfony\Component\HttpKernel\EventListener\SaveSessionListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="Psr\Container\ContainerInterface" alias="service_container" public="false"/>
    <service id="Symfony\Component\DependencyInjection\ContainerInterface" alias="service_container" public="false"/>
  </services>
</container>
